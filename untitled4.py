# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19fJ_Syb85OkNqR7THGSSsVQCbnbYWXXM
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Replace with your actual filename
df = pd.read_csv('bank.csv')
df.head()

df.info()
df.describe()
df.isnull().sum()

df.fillna(method='ffill', inplace=True)

# Encode categorical columns
df_encoded = pd.get_dummies(df, drop_first=True)

# Scale numeric columns
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
scaled_features = scaler.fit_transform(df_encoded)

import numpy as np
X = np.array(scaled_features)

from sklearn.cluster import KMeans

# Find optimal number of clusters (Elbow method)
import matplotlib.pyplot as plt

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, random_state=42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

# Plot
plt.plot(range(1, 11), wcss)
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=42)
clusters = kmeans.fit_predict(X)

# Add cluster labels to the original dataset
df['Customer_Segment'] = clusters

df.head()

df['Customer_Segment'] = kmeans.labels_

# See the updated data
df.head()

import matplotlib.pyplot as plt

plt.scatter(X[:, 0], X[:, 1], c=kmeans.labels_, cmap='viridis')
plt.title('Customer Segmentation (Bank Marketing)')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.show()



df.to_csv('bank_marketing_segmented.csv', index=False)

# If you want to download it in Colab
from google.colab import files
files.download('bank_marketing_segmented.csv')